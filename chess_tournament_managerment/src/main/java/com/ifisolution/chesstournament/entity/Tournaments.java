package com.ifisolution.chesstournament.entity;
// Generated Oct 5, 2018 11:22:52 PM by Hibernate Tools 5.2.11.Final

import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Tournaments generated by hbm2java
 */
@Entity
@Table(name = "tournaments", catalog = "chess_tournament")
//@JsonIgnoreProperties({"playerTournamentParticipations", "actualTournamentSponsors"})

public class Tournaments implements java.io.Serializable {

	private Integer tournamentId;
    //    @JsonIgnore
    private TournamentOrganizers tournamentOrganizers;
	private Date tournamentStartDate;
	private Date tournamentEndDate;
	private String tournamentName;
	private String tournamentDetails;
    @JsonIgnore
    private Set<PlayerTournamentParticipation> playerTournamentParticipations = new HashSet<PlayerTournamentParticipation>(0);
    @JsonIgnore
    private Set<ActualTournamentSponsors> actualTournamentSponsors = new HashSet<ActualTournamentSponsors>(
            0);

	public Tournaments() {
	}

	public Tournaments(TournamentOrganizers tournamentOrganizers, Date tournamentStartDate, Date tournamentEndDate,
			String tournamentName, String tournamentDetails) {
		this.tournamentOrganizers = tournamentOrganizers;
		this.tournamentStartDate = tournamentStartDate;
		this.tournamentEndDate = tournamentEndDate;
		this.tournamentName = tournamentName;
		this.tournamentDetails = tournamentDetails;
	}

    public Tournaments(Integer tournamentId, TournamentOrganizers tournamentOrganizers, Date tournamentStartDate,
                       Date tournamentEndDate, String tournamentName, String tournamentDetails,
                       Set<PlayerTournamentParticipation> playerTournamentParticipations,
                       Set<ActualTournamentSponsors> actualTournamentSponsors) {
        this.tournamentId = tournamentId;
		this.tournamentOrganizers = tournamentOrganizers;
		this.tournamentStartDate = tournamentStartDate;
		this.tournamentEndDate = tournamentEndDate;
		this.tournamentName = tournamentName;
		this.tournamentDetails = tournamentDetails;
		this.playerTournamentParticipations = playerTournamentParticipations;
        this.actualTournamentSponsors = actualTournamentSponsors;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "tournament_id", unique = true, nullable = false)
	public Integer getTournamentId() {
		return this.tournamentId;
	}

	public void setTournamentId(Integer tournamentId) {
		this.tournamentId = tournamentId;
	}

    @ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	@JoinColumn(name = "organizer_id", nullable = false)
	public TournamentOrganizers getTournamentOrganizers() {
		return this.tournamentOrganizers;
	}

	public void setTournamentOrganizers(TournamentOrganizers tournamentOrganizers) {
		this.tournamentOrganizers = tournamentOrganizers;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "tournament_start_date", nullable = false, length = 10)
	public Date getTournamentStartDate() {
		return this.tournamentStartDate;
	}

	public void setTournamentStartDate(Date tournamentStartDate) {
		this.tournamentStartDate = tournamentStartDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "tournament_end_date", nullable = false, length = 10)
	public Date getTournamentEndDate() {
		return this.tournamentEndDate;
	}

	public void setTournamentEndDate(Date tournamentEndDate) {
		this.tournamentEndDate = tournamentEndDate;
	}

	@Column(name = "tournament_name", nullable = false)
	public String getTournamentName() {
		return this.tournamentName;
	}

	public void setTournamentName(String tournamentName) {
		this.tournamentName = tournamentName;
	}

	@Column(name = "tournament_details", nullable = false)
	public String getTournamentDetails() {
		return this.tournamentDetails;
	}

	public void setTournamentDetails(String tournamentDetails) {
		this.tournamentDetails = tournamentDetails;
	}


    @OneToMany(cascade = CascadeType.PERSIST, fetch = FetchType.LAZY, mappedBy = "tournaments")
	public Set<PlayerTournamentParticipation> getPlayerTournamentParticipations() {
		return this.playerTournamentParticipations;
	}

	public void setPlayerTournamentParticipations(Set<PlayerTournamentParticipation> playerTournamentParticipations) {
		this.playerTournamentParticipations = playerTournamentParticipations;
	}

    @OneToMany(cascade = CascadeType.PERSIST, fetch = FetchType.LAZY, mappedBy = "listOfSponsors")
    public Set<ActualTournamentSponsors> getActualTournamentSponsors() {
        return actualTournamentSponsors;
    }

    public void setActualTournamentSponsors(Set<ActualTournamentSponsors> actualTournamentSponsors) {
        this.actualTournamentSponsors = actualTournamentSponsors;
    }

}
