package com.ifisolution.chesstournament.entity;
// Generated Oct 5, 2018 11:22:52 PM by Hibernate Tools 5.2.11.Final

import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Players generated by hbm2java
 */
@Entity
@Table(name = "players", catalog = "chess_tournament")
//@JsonIgnoreProperties({"refRankingCodes", "chessClubs", "playerTournamentParticipations"})

public class Players implements java.io.Serializable {

	private Integer playerId;
	private ChessClubs chessClubs;
	private RefRankingCodes refRankingCodes;
	private String firstName;
	private String lastName;
	private String address;
	private String phoneNumber;
	private String emailAddress;
	private String otherPlayerDetails;
	@JsonIgnore
	private Set<PlayerTournamentParticipation> playerTournamentParticipations = new HashSet<PlayerTournamentParticipation>(
			0);

	public Players() {
	}

	public Players(ChessClubs chessClubs, RefRankingCodes refRankingCodes, String firstName, String lastName,
			String address, String phoneNumber, String emailAddress, String otherPlayerDetails) {
		this.chessClubs = chessClubs;
		this.refRankingCodes = refRankingCodes;
		this.firstName = firstName;
		this.lastName = lastName;
		this.address = address;
		this.phoneNumber = phoneNumber;
		this.emailAddress = emailAddress;
		this.otherPlayerDetails = otherPlayerDetails;
	}

	public Players(ChessClubs chessClubs, RefRankingCodes refRankingCodes, String firstName, String lastName,
			String address, String phoneNumber, String emailAddress, String otherPlayerDetails,
			Set<PlayerTournamentParticipation> playerTournamentParticipations) {
		this.chessClubs = chessClubs;
		this.refRankingCodes = refRankingCodes;
		this.firstName = firstName;
		this.lastName = lastName;
		this.address = address;
		this.phoneNumber = phoneNumber;
		this.emailAddress = emailAddress;
		this.otherPlayerDetails = otherPlayerDetails;
		this.playerTournamentParticipations = playerTournamentParticipations;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "player_id", unique = true, nullable = false)
	public Integer getPlayerId() {
		return this.playerId;
	}

	public void setPlayerId(Integer playerId) {
		this.playerId = playerId;
	}

	@ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	@JoinColumn(name = "club_id", nullable = false)
	public ChessClubs getChessClubs() {
		return this.chessClubs;
	}

	public void setChessClubs(ChessClubs chessClubs) {
		this.chessClubs = chessClubs;
	}

	@ManyToOne(cascade = CascadeType.PERSIST, fetch = FetchType.EAGER)
	@JoinColumn(name = "ranking_code", nullable = false)
	public RefRankingCodes getRefRankingCodes() {
		return this.refRankingCodes;
	}

	public void setRefRankingCodes(RefRankingCodes refRankingCodes) {
		this.refRankingCodes = refRankingCodes;
	}

	@Column(name = "first_name", nullable = false)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false, length = 45)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "address", nullable = false)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "phone_number", nullable = false)
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "email_address", nullable = false)
	public String getEmailAddress() {
		return this.emailAddress;
	}

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	@Column(name = "other_player_details", nullable = false)
	public String getOtherPlayerDetails() {
		return this.otherPlayerDetails;
	}

	public void setOtherPlayerDetails(String otherPlayerDetails) {
		this.otherPlayerDetails = otherPlayerDetails;
	}

	@OneToMany(cascade = CascadeType.PERSIST, fetch = FetchType.LAZY, mappedBy = "players")
	public Set<PlayerTournamentParticipation> getPlayerTournamentParticipations() {
		return this.playerTournamentParticipations;
	}

	public void setPlayerTournamentParticipations(Set<PlayerTournamentParticipation> playerTournamentParticipations) {
		this.playerTournamentParticipations = playerTournamentParticipations;
	}

}
