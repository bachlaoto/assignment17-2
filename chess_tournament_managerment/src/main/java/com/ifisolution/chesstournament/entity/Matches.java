package com.ifisolution.chesstournament.entity;
// Generated Oct 5, 2018 11:22:52 PM by Hibernate Tools 5.2.11.Final

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import javax.persistence.*;
import java.util.Date;

/**
 * Matches generated by hbm2java
 */
@Entity
@Table(name = "matches", catalog = "chess_tournament")
@JsonIgnoreProperties({"playerTournamentParticipation", "refResultCodes"})

public class Matches implements java.io.Serializable {

	private MatchesId id;
	private PlayerTournamentParticipation playerTournamentParticipation;
	private RefResultCodes refResultCodes;
	private Date matchEndDatetime;

	public Matches() {
	}

	public Matches(MatchesId id, PlayerTournamentParticipation playerTournamentParticipation,
			RefResultCodes refResultCodes, Date matchEndDatetime) {
		this.id = id;
		this.playerTournamentParticipation = playerTournamentParticipation;
		this.refResultCodes = refResultCodes;
		this.matchEndDatetime = matchEndDatetime;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "playerId1", column = @Column(name = "player_id_1", nullable = false)),
			@AttributeOverride(name = "tournamentId", column = @Column(name = "tournament_id", nullable = false)),
			@AttributeOverride(name = "matchStarDatetime", column = @Column(name = "match_star_datetime", nullable = false, length = 19)),
			@AttributeOverride(name = "playerId2", column = @Column(name = "player_id_2", nullable = false)) })
	public MatchesId getId() {
		return this.id;
	}

	public void setId(MatchesId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "player_id_1", referencedColumnName = "player_id", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "tournament_id", referencedColumnName = "tournament_id", nullable = false, insertable = false, updatable = false) })
	public PlayerTournamentParticipation getPlayerTournamentParticipation() {
		return this.playerTournamentParticipation;
	}

	public void setPlayerTournamentParticipation(PlayerTournamentParticipation playerTournamentParticipation) {
		this.playerTournamentParticipation = playerTournamentParticipation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "result_code", nullable = false)
	public RefResultCodes getRefResultCodes() {
		return this.refResultCodes;
	}

	public void setRefResultCodes(RefResultCodes refResultCodes) {
		this.refResultCodes = refResultCodes;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "match_end_datetime", nullable = false, length = 19)
	public Date getMatchEndDatetime() {
		return this.matchEndDatetime;
	}

	public void setMatchEndDatetime(Date matchEndDatetime) {
		this.matchEndDatetime = matchEndDatetime;
	}

}
