/*
 * Created on 2018-10-05 ( Date ISO 2018-10-05 - Time 15:49:42 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.0.0
 */
package com.ifisolution.chesstournament.service;


import com.ifisolution.chesstournament.entity.ListOfSponsors;
import com.ifisolution.chesstournament.repository.ListOfSponsorsRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import javax.transaction.Transactional;
import java.util.List;

@Service
@Transactional
public class ListOfSponsorsServiceImpl implements ListOfSponsorsService {

    @Autowired
    private ListOfSponsorsRepository listOfSponsorsRepository;

    @Override
    public ListOfSponsors getOne(Integer sponsorId) {
        return listOfSponsorsRepository.findById(sponsorId).get();
    }

    @Override
    public Boolean delete(Integer sponsorId) {
        if (listOfSponsorsRepository.getOne(sponsorId) != null) {
            listOfSponsorsRepository.deleteById(sponsorId);
            return true;
        }
        return false;
    }

    @Override
    public ListOfSponsors create(ListOfSponsors listOfSponsors) {
        return listOfSponsorsRepository.save(listOfSponsors);
    }

    @Override
    public ListOfSponsors update(ListOfSponsors listOfSponsorsToUpdate) {
//        ListOfSponsors listOfSponsors = listOfSponsorsRepository.getOne(listOfSponsorsToUpdate.getSponsorId());
//
//        if (listOfSponsorsToUpdate.getSponsorName() != null) {
//
//        }
//        if (listOfSponsorsToUpdate.getSponsorPhone() != null) {
//
//        }
//        if (listOfSponsorsToUpdate.getOtherSponsorDetails() != null) {
//
//        }
//        return listOfSponsorsRepository.save(listOfSponsors);
        return listOfSponsorsRepository.save(listOfSponsorsToUpdate);

    }

    @Override
    public Boolean exist(ListOfSponsors listOfSponsors) {
        return listOfSponsorsRepository.existsById(listOfSponsors.getSponsorId());
    }

    @Override
    public List<ListOfSponsors> findAll() {
        return listOfSponsorsRepository.findAll();
    }

    @Override
    public Page<ListOfSponsors> findAll(Pageable pageable) {
        return listOfSponsorsRepository.findAll(pageable);
    }
}





